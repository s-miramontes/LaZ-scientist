1 Introduction. Word classes are often used in language modelling to solve the problem of sparse data. Various clustering techniques have been proposed (Brown et al., 1992; Jardino and Adda, 1993; Martin et al., 1998) which perform automatic word clustering optimizing a maximum-likelihood criterion with iterative clustering algorithms. In the field of statistical machine translation we also face the problem of sparse data. Our aim is to use word classes in statistical machine translation to allow for more robust statistical translation models. A naive approach for doing this would be the use of mono-lingually optimized word classes in source and target language. Unfortunately we can not expect these independently optimized classes to be correspondent. Therefore mono-lingually optimized word classes do not seem to be useful for machine translation (see also (Fung and Wu, 1995)). We define bilingual word clustering as the process of forming corresponding word classes suitable for machine translation purposes for a pair of languages using a parallel training corpus. The described method to determine bilingual word classes is an extension and improvement of the method mentioned in (Och and Weber, 1998). Our approach is simpler and computationally more efficient than (Wang et al., 1996).
2 Monolingual Word Clustering. The task of a statistical language model is to estimate the probability Pr(wiev) of a sequence of words wiv = wi 'WN. A simple approximation of Pr(41) is to model it as a product of bigram probabilities: Pr (wPI) = HiN_, p(wi *2_1). If we want to estimate the bigram probabilities p(wlw') using a realistic natural language corpus we are faced with the problem that most of the bigrams are rarely seen. One possibility to solve this problem is to partition the set of all words into equivalence classes. The function C maps words w to their classes C(w). Rewriting the corpus probability using classes we arrive at the following probability model p(wiv IC): In this model we have two types of probabilities: the transition probability p(C1C1) for class C given its predecessor class C' and the membership probability p(wIC) for word w given class C. To determine the optimal classes C for a given number of classes M we perform a maximumlikelihood approach: = arg mrc p(wiv IC) (2) We estimate the probabilities of Eq. (1) by relative frequencies: p(CIC&quot;) := n(C1C1')In(C'), p(wIC) = n(w)In(C). The function n(-) provides the frequency of a uni- or bigram in the training corpus. If we insert this into Eq. (2) and apply the negative logarithm and change the summation order we arrive at the following optimization Proceedings of EACL '99 criterion LP,. (Kneser and Ney, 1991): The function h(n) is a shortcut for n • log(n). It is necessary to fix the number of classes in C in advance as the optimum is reached if every word is a class of its own. Because of this it is necessary to perform an additional optimization process which determines the number of classes. The use of leaving-one-out in a modified optimization criterion as in (Kneser and Ney, 1993) could in principle solve this problem. An efficient optimization algorithm for LPI is described in section 4.
3 Bilingual Word Clustering. In bilingual word clustering we are interested in classes F and E which form partitions of the vocabulary of two languages. To perform bilingual word clustering we use a maximum-likelihood approach as in the monolingual case. We maximize the joint probability of a bilingual training corpus To perform the maximization of Eq. (6) we have to model the monolingual a priori probability p(ef1E) and the translation probability p(f lel; e, F). For the first we use the class-based bigram probability from Eq. (1). To model p(fillef; E, .7) we assume the existence of an alignment af. We assume that every word fj is produced by the word ea, at position a3 in the training corpus with the probability P(filea,): The word alignment ail is trained automatically using statistical translation models as described in (Brown et al., 1993; Vogel et al., 1996). The idea is to introduce the unknown alignment a as hidden variable into a statistical model of the translation probability p(glef). By applying the EMalgorithm we obtain the model parameters. The alignment cif that we use is the Viterbi-Alignment of an HMM alignment model similar to (Vogel et al., 1996). By rewriting the translation probability using word classes, we obtain (corresponding to Eq. (1)): (8) The variables F and E denote special classes in and E. We use relative frequencies to estimate p(FIE) and p(fIF): The function nt(FIE) counts how often the words in class F are aligned to words in class E. If we insert these relative frequencies into Eq. (8) and apply the same transformations as in the monolingual case we obtain a similar optimization criterion for the translation probability part of Eq. (6). Thus the full optimization criterion for bilingual word classes is: The two count functions n(E1E) and nt(FIE) can be combined into one count function ng (X1Y) n(X1Y) + nt (X1Y) as for all words f and all words e and e' holds n(f le) = 0 and nt(ele1) = 0. Using the function n9 we arrive at the following optimization criterion: Here we defined ng,i (X) = Ex, ng (XIX') and n9,2(X) = Ex, n9(X11X). The variable X runs over the classes in £ and F. In the optimization process it cannot be allowed that words of different languages occur in one class. It can be seen that Eq. (3) is a special case of Eq. (9) with ng,1 = n9,2. Another possibility to perform bilingual word clustering is to apply a two-step approach. In a first step we determine classes S optimizing only the monolingual part of Eq. (6) and secondly we determine classes F optimizing the bilingual part (without changing 6): By using these two optimization processes we enforce that the classes E are mono-lingually 'good' classes and that the classes .7- correspond to 6. Interestingly enough this results in a higher translation quality (see section 5).
4 Implementation. An efficient optimization algorithm for LPI is the exchange algorithm (Martin et al., 1998). For the optimization of LP2 we can use the same algorithm with small modifications. Our starting point is a random partition of the training corpus vocabulary. This initial partition is improved iteratively by moving a single word from one class to another. The algorithm to determine bilingual classes is depicted in Figure 1. If only one word w is moved between the partitions C and C' the change LP(C,n9)— LP(C',n9) can be computed efficiently looking only at classes C for which ng (w, C) > 0 or ng(C,w) >0. We define Mc, to be the average number of seen predecessor and successor word classes. With the notation I for the number of iterations needed for convergence, B for the number of word bigrams, M for the number of classes and V for the vocabulary size the computational complexity of this algorithm is roughly I (B • log2 (B IV) +V M • Mo). A detailed analysis of the complexity can be found in (Martin et al., 1998). The algorithm described above provides only a local optimum. The quality of the resulting local optima can be improved if we accept a short-term degradation of the optimization criterion during the optimization process. We do this in our implementation by applying the optimization method threshold accepting (Dueck and Scheuer, 1990) which is an efficient simplification of simulated annealing.
5 Results. The statistical machine-translation method described in (Och and Weber, 1998) makes use of bilingual word classes. The key element of this approach are the alignment templates (originally referred to as translation rules) which are pairs of phrases together with an alignment between the words of the phrases. Examples of alignment templates are shown in Figure 2. The advantage of the alignment template approach against word-based statistical translation models is that word context and local re-orderings are explicitly taken into account. The alignment templates are automatically trained using a parallel training corpus. The translation of a sentence is done by a search process which determines the set of alignment templates which optimally cover the source sentence. The bilingual word classes are used to generalize the applicability of the alignment templates in search. If there exists a class which contains all cities in source and target language it is possible that an alignment template containing a special city can be generalized to all cities. More details are given in (Och and Weber, 1998; Och and Ney, 1999). We demonstrate results of our bilingual clustering method for two different bilingual corpora (see Tables 1 and 2). The EuTRANs-I corpus is a subtask of the &quot;Traveller Task&quot; (Vidal, 1997) which is an artificially generated Spanish-English corpus. The domain of the corpus is a humanto-human communication situation at a reception Table 3: Example of bilingual word classes (corpus EuTRANs-I, method BIL-2). El: how it pardon what when where which• who why E2: my our E3: today tomorrow E4: ask call make E5: carrying changing giving looking moving putting sending showing waking E6: full half quarter Si: c'omo cu'al cu'ando cu'anta d'onde dice dicho hace qu'e qui'en tiene desk of a hotel. The EuTRANs-II corpus is a natural German-English corpus consisting of different text types belonging to the domain of tourism: bilingual Web pages of hotels, bilingual touristic brochures and business correspondence. The target language of our experiments is English. We compare the three described methods to generate bilingual word classes. The classes MONO are determined by monolingually optimizing source and target language classes with Eq. (4). The classes BIL are determined by bilingually optimizing classes with Eq. (10). The classes BIL-2 are determined by first optimizing mono-lingually classes for the target language (English) and afterwards optimizing classes for the source language (Eq. (11) and Eq. (12)). For EuTRANs-I we used 60 classes and for EuTRANs-II we used 500 classes. We chose the number of classes in such a way that the final performance of the translation system was optimal. The CPU time for optimization of bilingual word classes on an Alpha workstation was under 20 seconds for EuTRANs-I and less than two hours for EuTRANs-II. Table 3 provides examples of bilingual word classes for the EuTRANs-I corpus. It can be seen that the resulting classes often contain words that are similar in their syntactic and semantic functions. The grouping of words with a different meaning like today and tomorrow does not imply that these words should be translated by the same Spanish word, but it does imply that the translations of these words are likely to be in the same Spanish word class. To measure the quality of our bilingual word classes we applied two different evaluation measures: exp (J-1 E maxi log (p (C ( f j) (ei)))) 3=1 Both measures determine the extent to which the translation probability is spread out. A small value means that the translation probability is very focused and that the knowledge of the source language class provides much information about the target language class. sertions/deletions/substitutions relative to a reference translation. As expected the translation quality improves using classes. For the small EuTRANs-I task the word error rates reduce significantly. The word error rates for the EuTRANs-II task are much larger because the task has a very large vocabulary and is more complex. The bilingual classes show better results than the monolingual classes MONO. One explanation for the improvement in translation quality is that the bilingually optimized classes result in an increased average size of used alignment templates. For example the average length of alignment templates with the EuTRANs-I corpus using WORD is 2.85 and using BIL-2 it is 5.19. The longer the average alignment template length, the more context is used in the translation and therefore the translation quality is higher. An explanation for the superiority of BIL-2 over BIL is that by first optimizing the English classes mono-lingually, it is much more probable that longer sequences of classes occur more often thereby increasing the average alignment template size.
6 Summary and future works. By applying a maximum-likelihood approach to the joint probability of a parallel corpus we obtained an optimization criterion for bilingual word classes which is very similar to the one used in monolingual maximum-likelihood word clustering. For optimization we used the exchange algorithm. The obtained word classes give a low translation lexicon perplexity and improve the quality of staProceedings of EACL '99 tistical machine translation. We expect improvements in translation quality by allowing that words occur in more than one class and by performing a hierarchical clustering. Acknowledgements This work has been partially supported by the European Community under the ESPRIT project number 30268 (EuTrans).