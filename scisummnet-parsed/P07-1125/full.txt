1 Introduction. The automatic processing of scientific papers using NLP and machine learning (ML) techniques is an increasingly important aspect of technical informatics. In the quest for a deeper machine-driven ‘understanding’ of the mass of scientific literature, a frequently occuring linguistic phenomenon that must be accounted for is the use of hedging to denote propositions of a speculative nature. Consider the following: The second example contains a hedge, signaled by the use of suggest and might, which renders the proposition inhibit(XfK89—*Felin-9) speculative. Such analysis would be useful in various applications; for instance, consider a system designed to identify and extract interactions between genetic entities in the biomedical domain. Case 1 above provides clear textual evidence of such an interaction 992 and justifies extraction of inhibit(XfK89—*Felin-9), whereas case 2 provides only weak evidence for such an interaction. Hedging occurs across the entire spectrum of scientific literature, though it is particularly common in the experimental natural sciences. In this study we consider the problem of learning to automatically classify sentences containing instances of hedging, given only a very limited amount of annotatorlabelled ‘seed’ data. This falls within the weakly supervised ML framework, for which a range of techniques have been previously explored. The contributions of our work are as follows:
2 Related Work. While there is a certain amount of literature within the linguistics community on the use of hedging in scientific text, eg. (Hyland, 1994), there is little of for which the learner is most confident. Early work direct relevance to the task of classifying speculative by Yarowsky (1995) falls within this framework. language from an NLP/ML perspective. Banko and Brill (2001) use ‘bagging’ and agreeThe most clearly relevant study is Light et al. ment to measure confidence on unlabelled samples, (2004) where the focus is on introducing the prob- and more recently McClosky et al. (2006) use selflem, exploring annotation issues and outlining po- training for improving parse reranking. tential applications rather than on the specificities Other relevant recent work includes (Zhang, of the ML approach, though they do present some 2004), in which random feature projection and a results using a manually crafted substring match- committee of SVM classifiers is used in a hybrid ing classifier and a supervised SVM on a collection co/self-training strategy for weakly supervised reof Medline abstracts. We will draw on this work lation classification and (Chen et al., 2006) where throughout our presentation of the task. a graph based algorithm called label propagation is Hedging is sometimes classed under the umbrella employed to perform weakly supervised relation exconcept of subjectivity, which covers a variety of lin- traction. guistic phenomena used to express differing forms 3 The Hedge Classification Task of authorial opinion (Wiebe et al., 2004). Riloff et al. Given a collection of sentences, S, the task is to (2003) explore bootstrapping techniques to identify label each sentence as either speculative or nonsubjective nouns and subsequently classify subjec- speculative (spec or nspec henceforth). Specifically, tive vs. objective sentences in newswire text. Their S is to be partitioned into two disjoint sets, one repwork bears some relation to ours; however, our do- resenting sentences that contain some form of hedgmains of interest differ (newswire vs. scientific text) ing, and the other representing those that do not. and they do not address the problem of hedge clas- To further elucidate the nature of the task and imsification directly. prove annotation consistency, we have developed a 2.2 Weakly Supervised Learning new set of guidelines, building on the work of Light Recent years have witnessed a significant growth et al. (2004). As noted by Light et al., speculative of research into weakly supervised ML techniques assertions are to be identified on the basis of judgefor NLP applications. Different approaches are of- ments about the author’s intended meaning, rather ten characterised as either multi- or single-view, than on the presence of certain designated hedge where the former generate multiple redundant (or terms. semi-redundant) ‘views’ of a data sample and per- We begin with the hedge definition given by form mutual bootstrapping. This idea was for- Light et al. (item 1) and introduce a set of further malised by Blum and Mitchell (1998) in their guidelines to help elucidate various ‘grey areas’ and presentation of co-training. Co-training has also tighten the task specification. These were developed been used for named entity recognition (NER) after initial annotation by the authors, and through (Collins and Singer, 1999), coreference resolution discussion with colleagues. Further examples are (Ng and Cardie, 2003), text categorization (Nigam given in online Appendix A2. and Ghani, 2000) and improving gene name data The following are considered hedge instances: (Wellner, 2005). 1. An assertion relating to a result that does not Conversely, single-view learning models operate necessarily follow from work presented, but without an explicit partition of the feature space. could be extrapolated from it (Light et al.). Perhaps the most well known of such approaches 2. Relay of hedge made in previous work. is expectation maximization (EM), used by Nigam Dl and Ser have been proposed to act redundantly in the et al. (2000) for text categorization and by Ng and sensory bristle lineage. Cardie (2003) in combination with a meta-level fea- 3. Statement of knowledge paucity. ture selection procedure. Self-training is an alternative single-view algorithm in which a labelled pool is incrementally enlarged with unlabelled samples 993 2available from www.cl.cam.ac.uk/∼bwm23/ The following are not considered hedge instances: Here we show that the hemocytes are the main regulator of adenosine in the Drosophila larva, as was speculated previously for mammals. Although the adgf-a mutation leads to larval or pupal death, we have shown that this is not due to the adenosine or deoxyadenosine simply blocking cellular proliferation or survival, as the experiments in vitro would suggest.
4 Data. We used an archive of 5579 full-text papers from the functional genomics literature relating to Drosophila melanogaster (the fruit fly). The papers were converted to XML and linguistically processed using the RASP toolkit3. We annotated six of the papers to form a test set with a total of 380 spec sentences and 1157 nspec sentences, and randomly selected 300,000 sentences from the remaining papers as training data for the weakly supervised learner. To ensure selection of complete sentences rather than headings, captions etc., unlabelled samples were chosen under the constraints that they must be at least 10 words in length and contain a main verb.
5 Annotation and Agreement. Two separate annotators were commissioned to label the sentences in the test set, firstly one of the authors and secondly a domain expert with no prior input into the guideline development process. The two annotators labelled the data independently using the guidelines outlined in section 3. Relative F1 (Frel 1 ) and Cohen’s Kappa (n) were then used to quantify the level of agreement. For brevity we refer the reader to (Artstein and Poesio, 2005) and (Hripcsak and Rothschild, 2004) for formulation and discussion of n and Frel The two metrics are based on different assumptions about the nature of the annotation task. Frel is founded on the premise that the task is to recognise and label spec sentences from within a background population, and does not explicitly model agreement on nspec instances. It ranges from 0 (no agreement) to 1 (no disagreement). Conversely, n gives explicit credit for agreement on both spec and nspec instances. The observed agreement is then corrected for ‘chance agreement’, yielding a metric that ranges between −1 and 1. Given our definition of hedge classification and assessing the manner in which the annotation was carried out, we suggest that the founding assumption of Frel 1 fits the nature of the task better than that of n. Following initial agreement calculation, the instances of disagreement were examined. It turned out that the large majority of cases of disagreement were due to negligence on behalf of one or other of the annotators (i.e. cases of clear hedging that were missed), and that the cases of genuine disagreement were actually quite rare. New labelings were then created with the negligent disagreements corrected, resulting in significantly higher agreement scores. Values for the original and negligence-corrected labelings are reported in Table 1. Annotator conferral violates the fundamental assumption of annotator independence, and so the latter agreement scores do not represent the true level of agreement; however, it is reasonable to conclude that the actual agreement is approximately lower bounded by the initial values and upper bounded by the latter values. In fact even the lower bound is well within the range usually accepted as representing ‘good’ agreement, and thus we are confident in accepting human labeling as a gold-standard for the hedge classification task. For our experiments, we use the labeling of the genetics expert, corrected for negligent instances.
6 Discussion. In this study we use single terms as features, based on the intuition that many hedge cues are single terms (suggest, likely etc.) and due to the success of ‘bag of words’ representations in many classification tasks to date. Investigating more complex sample representation strategies is an avenue for future research. There are a number of factors that make our formulation of hedge classification both interesting and challenging from a weakly supervised learning perspective. Firstly, due to the relative sparsity of hedge cues, most samples contain large numbers of irrelevant features. This is in contrast to much previous work on weakly supervised learning, where for instance in the case of text categorization (Blum and Mitchell, 1998; Nigam et al., 2000) almost all content terms are to some degree relevant, and irrelevant terms can often be filtered out (e.g. stopword removal). In the same vein, for the case of entity/relation extraction and classification (Collins and Singer, 1999; Zhang, 2004; Chen et al., 2006) the context of the entity or entities in consideration provides a highly relevant feature space. Another interesting factor in our formulation of hedge classification is that the nspec class is defined on the basis of the absence of hedge cues, rendering it hard to model directly. This characteristic is also problematic in terms of selecting a reliable set of nspec seed sentences, as by definition at the beginning of the learning cycle the learner has little knowledge about what a hedge looks like. This problem is addressed in section 10.3. In this study we develop a learning model based around the concept of iteratively predicting labels for unlabelled training samples, the basic paradigm for both co-training and self-training. However we generalise by framing the task in terms of the acquisition of labelled training data, from which a supervised classifier can subsequently be learned.
7 A Probabilistic Model for Training Data Acquisition. In this section, we derive a simple probabilistic model for acquiring training data for a given learning task, and use it to motivate our approach to weakly supervised hedge classification. Given: Aim: Infer a set of training samples T for each concept class yi such that bx E 7[Y (x) = yi] Now, it follows that bxET[Y (x)=yi] is satisfied in the case that bxET[P(yi|x)=1], which leads to a model in which T is initialised to Si and then iteratively augmented with the unlabelled sample(s) for which the posterior probability of class membership is maximal. Formally: An interesting observation is the importance of the sample prior P(xj) in the denominator, often ignored for classification purposes because of its invariance to class. We can expand further by = arg max j marginalising over the classes in the denominator in expression 2, yielding: so we are left with the class priors and classconditional likelihoods, which can usually be estimated directly from the data, at least under limited dependence assumptions. The class priors can be estimated based on the relative distribution sizes derived from the current training sets: where |S |is the number of samples in training set S. If we assume feature independence, which as we will see for our task is not as gross an approximation as it may at first seem, we can simplify the classconditional likelihood in the well known manner: and then (estimate the likelihood for each feature: where f(x, S) is the number of samples in training set S in which feature x is present, and a is a universal smoothing constant, scaled by the class prior. This scaling is motivated by the principle that without knowledge of the true distribution of a particular feature it makes sense to include knowledge of the class distribution in the smoothing mechanism. Smoothing is particularly important in the early stages of the learning process when the amount of training data is severely limited resulting in unreliable frequency estimates.
8 Hedge Classification. We will now consider how to apply this learning model to the hedge classification task. As discussed earlier, the speculative/non-speculative distinction hinges on the presence or absence of a few hedge cues within the sentence. Working on this premise, all features are ranked according to their probability of ‘hedge cue-ness’: which can be computed directly using (4) and (6). The m most probable features are then selected from each sentence to compute (5) and the rest are ignored. This has the dual benefit of removing irrelevant features and also reducing dependence between features, as the selected features will often be nonlocal and thus not too tightly correlated. Note that this idea differs from traditional feature selection in two important ways: side effect of skewing the posterior estimates in favour of the spec class, but is admissible for the purposes of ranking and classification by posterior thresholding (see next section).
9 Classification. The weakly supervised learner returns a labelled data set for each class, from which a classifier can be trained. We can easily derive a classifier using the estimates from our learning model by: where a is an arbitrary threshold used to control the precision/recall balance. For comparison purposes, we also use Joachims’ SVMlight (Joachims, 1999).
10 Experimental Evaluation. To examine the practical efficacy of the learning and classification models we have presented, we use the following experimental method: The batch size for each iteration is set to 0.001 * |U|. After each learning iteration, we compute the precision/recall BEP for the spec class using both classifiers trained on the current labelled data. We use BEP because it helps to mitigate against misleading results due to discrepancies in classification threshold placement. Disadvantageously, BEP does not measure a classifier’s performance across the whole of the recall/precision spectrum (as can be obtained, for instance, from receiver-operating characteristic (ROC) curves), but for our purposes it provides a clear, abstracted overview of a classifier’s accuracy given a particular training set. The training and classification models we have presented require the setting of two parameters: the smoothing parameter α and the number of features per sample m. Analysis of the effect of varying α on feature ranking reveals that when α = 0, low frequency terms with spurious class correlation dominate and as α increases, high frequency terms become increasingly dominant, eventually smoothing away genuine low-to-mid frequency correlations. This effect is illustrated in Table 2, and from this analysis we chose α = 5 as an appropriate level of smoothing. We use m=5 based on the intuition that five is a rough upper bound on the number of hedge cue features likely to occur in any one sentence. We use the linear kernel for SVMlight with the default setting for the regularization parameter C. We construct binary valued, L2-normalised (unit length) input vectors to represent each sentence, as this resulted in better performance than using frequency-based weights and concords with our presence/absence feature estimates. The learning model we have presented requires a set of seeds for each class. To generate seeds for the spec class, we extracted all sentences from U containing either (or both) of the terms suggest or likely, as these are very good (though not perfect) hedge cues, yielding 6423 spec seeds. Generating seeds for nspec is much more difficult, as integrity requires the absence of hedge cues, and this cannot be done automatically. Thus, we used the following procedure to obtain a set of nspec seeds: We started with 8830 sentences and after a couple of hours work reduced this down to a (still potentially noisy) nspec seed set of 7541 sentences.
10.4 Baselines. As a baseline classifier we use the substring matching technique of (Light et al., 2004), which labels a sentence as spec if it contains one or more of the following: suggest, potential, likely, may, at least, in part, possibl, further investigation, unlikely, putative, insights, point toward, promise and propose. To provide a comparison for our learning model, we implement a more traditional self-training procedure in which at each iteration a committee of five SVMs is trained on randomly generated overlapping subsets of the training data and their cumulative confidence is used to select items for augmenting the labelled training data. For similar work see (Banko and Brill, 2001; Zhang, 2004).
10.5 Results. Figure 1 plots accuracy as a function of the training iteration. After 150 iterations, all of the weakly supervised learning models are significantly more accurate than the baseline according to a binomial sign test (p < 0.01), though there is clearly still much room for improvement. The baseline classifier achieves a BEP of 0.60 while both classifiers using our learning model reach approximately 0.76 BEP with little to tell between them. Interestingly, the combination of the SVM committee-based learning model with our classifier (denoted by ‘SVM (Prob)’), performs competitively with both of the approaches that use our probabilistic learning model and significantly better than the SVM committeebased learning model with an SVM classifier, ‘SVM (SVM)’, according to a binomial sign test (p<0.01) after 150 iterations. These results suggest that performance may be enhanced when the learning and classification tasks are carried out by different models. This is an interesting possibility, which we intend to explore further. An important issue in incremental learning scenarios is identification of the optimum stopping point. Various methods have been investigated to address this problem, such as ‘counter-training’ (Yangarber, 2003) and committee agreement (Zhang, 2004); how such ideas can be adapted for this task is one of many avenues for future research.
10.6 Error Analysis. Some errors are due to the variety of hedge forms. For example, the learning models were unsuccessful in identifying assertive statements of knowledge paucity, eg: There is no clear evidence for cytochrome c release during apoptosis in C elegans or Drosophila. Whether it is possible to learn such examples without additional seed information is an open question. This example also highlights the potential benefit of an enriched sample representation, in this case one which accounts for the negation of the phrase ‘clear evidence’ which otherwise might suggest a strongly non-speculative assertion. In many cases hedge classification is challenging even for a human annotator. For instance, distinguishing between a speculative assertion and one relating to a pattern of observed non-universal behaviour is often difficult. The following example was chosen by the learner as a spec sentence on the 150th training iteration: Each component consists of a set of subcomponents that can be localized within a larger distributed neural system. The sentence does not, in fact, contain a hedge but rather a statement of observed non-universal behaviour. However, an almost identical variant with ‘could’ instead of ‘can’ would be a strong speculative candidate. This highlights the similarity between many hedge and non-hedge instances, which makes such cases hard to learn in a weakly supervised manner.
11 Conclusions and Future Work. We have shown that weakly supervised ML is applicable to the problem of hedge classification and that a reasonable level of accuracy can be achieved. The work presented here has application in the wider academic community; in fact a key motivation in this study is to incorporate hedge classification into an interactive system for aiding curators in the construction and population of gene databases. We have presented our initial results on the task using a simple probabilistic model in the hope that this will encourage others to investigate alternative learning models and pursue new techniques for improving accuracy. Our next aim is to explore possibilities of introducing linguistically-motivated knowledge into the sample representation to help the learner identify key hedge-related sentential components, and also to consider hedge classification at the granularity of assertions rather than text sentences.
Acknowledgements. This work was partially supported by the FlySlip project, BBSRC Grant BBS/B/16291, and we thank Nikiforos Karamanis and Ruth Seal for thorough annotation and helpful discussion. The first author is supported by an University of Cambridge Millennium Scholarship.