Arg = (Sense Var) P2 = Arg = (Sense Var)1 This, in turn, is readily interpretable as a description of the logical expression Vq.dog(q)AP(g) It remains to provide verbs with a sense that provides a suitable for is, for (Sense Prop P2 Pred). An example would be the following: Cat = V Lex = barks Tense = Pres Pers = 3 Subj = {Num = Sing Anim = + Obj = NONE = [P2 = [Fred = bark]]] IV Conclusion It has not been possible in this paper to give more than an impression of how an experimental machine translation system might be constructed based on FUG. I hope, however, that it has been possible to convey something of the value of monotonic systems for this purpose. Implementing FUG in an efficient way requires skill and a variety of little known techniques. However, the programs, though subtle, are not large and, once written, they provide the grammarian and lexicographer with an emmense wealth of expressive devices. Any system implemented strictly within this framework will be reversible in the sense that, if it translates from language A to language B the, to the same extent, translates from B to A. If the set among the translations it delivers for a, then a will be among the translations of each of I of no system that comes close to providing these advantages and I know of no facility provided for in any system proposed hitherto that it not subsumable under FUG =