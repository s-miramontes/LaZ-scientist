1 Introduction. Linguists who have analyzed news stories (Schokkenbroek,1999; Bell,1997; Ohtsuka and Brewer,1992, etc.) noticed that “narratives1 are about more than one event and these events are temporally ordered. Though it seems most logical to recapitulate events in the order in which they happened, i.e. in chronological order, the events are often presented in a different sequence”. The same paper states that “it is important to reconstruct the underlying event order2 for narrative analysis to assign meaning to the sequence in which the events are narrated at the level of discourse structure....If the underlying event structure cannot be reconstructed, it may well be impossible to understand the narrative at all, let alone assign meaning to its structure”. Several psycholinguistic experiments show the influence of event-arrangement in news stories on the ease of comprehension by readers. Duszak (1991) had readers reconstruct a news story from the randomized sentences. According to his experiments readers have a default strategy by which—in the absence of cues to the contrary—they re-impose chronological order on events in the discourse. The problem of reconstructing the chronological order of events becomes more complicated if we have to deal with separate news stories, written at different times and describing the development of some situation, as is the case for multidocument summarization. By judicious definition, one can make this problem easy or hard. Selecting only specific items to assign time-points to, and then measuring correctness on them alone, may give high performance but leave much of the text unassigned. We address the problem of assigning a time-point to every clause in the text. Our approach is to break the news stories into their constituent events and to assign timestamps—either time-points or time-intervals—to these events. When assigning time-stamps we analyze both implicit time references (mainly through the tense system) and explicit ones (temporal adverbials) such as ‘on Monday’, ‘in 1998’, etc. The result of the work is a prototype program which takes as input set of news stories broken into separate sentences and produces as output a text that combines all the events from all the articles, organized in chronological order.
2 Data. As data we used a set of news stories about an earthquake in Afghanistan that occurred at the end of May in 1998. These news stories were taken from CNN, ABC, and APW websites for the DUC-2000 meeting. The stories were all written within one week. Some of the texts were written on the same day. In addition to a description of the May earthquake, these texts contain references to another earthquake that occurred in the same region in February 1998.
3 Identifying Events. To divide sentences into event-clauses we use CONTEX (Hermjakob, 1997), a parser that produces a syntactic parse tree augmented with semantic labels. CONTEX uses machine learning techniques to induce a grammar from a given treebanks. A sample output of CONTEX is given in Appendix 1. To divide a sentence into event-clauses the parse tree output by CONTEX is analyzed from left to right (root to leaf). The ::CAT field for each node provides the necessary information about whether the node under consideration forms a part of its upper level event or whether it introduces a new event. ::CAT features that indicate new events are: S-CLAUSE, S-SNT, SSUB-CLAUSE, S-PART-CLAUSE, S-RELCLAUSE. These features mark clauses which contain both subject (one or several NPs) and predicate (VP containing one or several verbs). The above procedure classifies a clause containing more than one verb as a simple clause. Such clauses are treated as one event and only one time-point will be assigned to them. This is fine when the second verb is used in the same tense as the first, but may be wrong in some cases, as in He lives in this house now and will stay here for one more year. There are no such clauses in the analyzed data, so we ignore this complication for the present. The parse tree also gives information about the tense of verbs, used later for time assignment. In order to facilitate subsequent processing, we wish to rephrase relative clauses as full independent sentences. We therefore have to replace pronouns where it is possible by their antecedents. Very often the parser gives information about the referential antecedents (in the example below, Russia). Therefore we introduced the rule: if it is possible to identify the referent, put it into the event-clause: Here the antecedent for which is identified as the relief, and gives which <the relief> was costing lives instead of which <poor coordination> was costing lives. Fortunately, in most cases our rule works correctly. Although the event-identifier works reasonably well, breaking text into event-clauses needs further investigation. Table 1 shows the performance of the system. Two kinds of mistakes are made by the event identifier: those caused by CONTEX (it does not identify clauses with omitted predicate, etc.) and those caused by the fact that our clause identifier does too shallow analysis of the parse tree.
4 Time-stamper. According to (Bell, 1997) “time is expressed at different levels—in the morphology and syntax of the verb phrase, in time adverbials whether lexical or phrasal, and in the discourse structure of the stories above the sentence”. For the present work we use slightly modified time representations suggested in (Allen, 1991). Formats used for time representation: We use two anchoring time points: We require that the first sentence for each article contains time information. For example: The date information is in bold. We denote by Ti the reference time-point for the article, where i 3 YYYY—year number, DDD—absolute number of the day within the year (1–366), W-—umber of the day in a week (1- Monday, ... 7- Saturday). If it is impossible to point out the day of the week then W is assigned 0. means that it is the time point of article i. The symbol Ti is used as a comparative time-point if the time the article was written is unknown. The information in brackets gives the exact date the article was written, which is the main anchor point for the time-stamper. The information about hours, minutes and seconds is ignored for the present. 2. Last time point assigned in the same sentence While analyzing different event-clauses within the same sentence we keep track of what time-point was most recently assigned within this sentence. If needed, we can refer to this time-point. In case the most recent time information assigned is not a date but an interval we record information about both time boundaries. When the program proceeds to the next sentence, the variable for the most recently assigned date becomes undefined. In most cases this assumption works correctly (example 5.2–5.3): The last time interval assigned for sentence 5.2 is {1998:53:0}---{1998:71:0}, which gives an approximate range of days when the previous earthquake happened. But the information in sentence 5.3 is about the recent earthquake and not about the previous one of 3 months earlier, which is why it would be a mistake to point Monday and Tuesday within that range. Mani and Wilson (2000) point out “over half of the errors [made by his time-stamper] were due to propagation of spreading of an incorrect event time to neighboring events”. The rule of dropping the most recently assigned date as an anchor point when proceeding to the next sentence very often helps us to avoid this problem. There are however cases where dropping the most recent time as an anchor when proceeding to the next sentence causes errors: It is clear that sentence 4.9 is the continuation of sentence 4.8 and refers to the same time point (February earthquake). In this case our rule assigns the wrong time to 4.9.1. Still we retain this rule because it is more frequently correct than incorrect. First, the text divided into event-clauses is run through a program that extracts all the date-stamps (made available by Kevin Knight, ISI). In most cases this program does not miss any date-stamps and extracts only the correct ones. The only cases in which it did not work properly for the texts were: Here the modal verb MAY was assumed to be the month, given that it started with a capital letter. Tuberculosis is already common in the area where people live in close quarters and have poor hygiene here the noun quarters, which in this case is used in the sense immediate contact or close range (Merriam-Webster dictionary), was assumed to be used in the sense the fourth part of a measure of time (Merriam-Webster dictionary). After extracting all the date-phrases we proceed to time assignment. When assigning a time to an event, we select the time to be either the most recently assigned date or, if the value of the most recently assigned date is undefined, to the date of the article. We use a set of rules to perform this selection. These rules can be divided into two main categories: those that work for sentences containing explicit date information, and those that work for sentences that do not. If the day-of-the-week used in the eventclause is the same as that of the article (or the most recently assigned date, if it is defined), and there no words before it could signal that the described event happened earlier or will happen later, then the time-point of the article (or the most recently assigned date, if it is defined) is assigned to this event. If before or after a day-ofthe-week there is a word/words signaling that the event happened earlier of will happen later then the time-point is assigned in accordance with this signal-word and the most recently assigned date, if it is defined. If the day-of-the-week used in the eventclause is not the same as that of the article (or the most recently assigned date, if it is defined), then if there are words pointing out that the event happened before the article was written or the tense used in the clause is past, then the time for the event-clause is assigned in accordance with this word (such words we call signal-words), or the most recent day corresponding to the current day-of-the-week is chosen. If the signal-word points out that the event will happen after the article was written or the tense used in the clause is future, then the time for the event-clause is assigned in accordance with the signal word or the closest subsequent day corresponding to the current day-of-the-week. helicopters evacuated 50 of the most seriously injured to emergency medical centers. The time for article 5 is (06/06/1998:Tuesday 15:17:00). So, the time assigned to this eventclause is: 5.3.1 {1998:151:1}, {1998:152:2}. The rules are the same as for a day-of-theweek, but in this case a time-range is assigned to the event-clause. The left boundary of the range is the first day of the month, the right boundary is the last day of the month, and though it is possible to figure out the days of weeks for these boundaries, this aspect is ignored for the present. earthquake in the same region killed 2,300 people and left thousands of people homeless. The time for article 4 is (05/30/1998:Saturday 14:41:00). So, the time assigned to this eventclause is 4.8.1 {1998:32:0}---{1998:60:0}. In the analyzed corpus there is a case where the presence of a name of month leads to a wrong time-stamping: Because of February, a wrong time-interval is assigned to clause 6.3.3, namely {1998:32:0}--{1998:60:0}. As this event-clause is a description of the latest news as compared to some figures it should have the time-point of the article. Such cases present a good possibility for the use of machine learning techniques to disambiguate between the cases where we should take into account date-phrase information and where not. We might have date-stamps where the words weeks, days, months, years are used with modifiers. For example remote mountainous area rocked three months earlier by another massive quake 5.2.4 that <another massive quake> claimed some 2,300 victims. In event-clause 5.2.3 the expression three months earlier is used. It is clear that to get the time for the event it is not enough to subtract 3 months from the time of the article because the above expression gives an approximate range within which this event could happen and not a particular date. For such cases we invented the following rule: For event 5.2.3 the time range will be {1998:53:0)---{1998:71:0) (the exact date of the article is {1998:152:2}). If the modifier used with weeks, days, months or years is several, then the multiplier used in (1) is equal to 2. If an event-clause does not contain any datephrase but contains one of the words ‘when’, ‘since’, ‘after’, ‘before’, etc., it might mean that this clause refers to an event, the time of which can be used as a reference point for the event under analysis. In this case we ask the user to insert the time for this reference event manually. This rule can cause problems in cases where ‘after’ or ‘before’ are used not as temporal connectors but as spatial ones, though in the analyzed texts we did not face this problem. If the current event-clause refers to a timepoint in Present/Past Perfect tense, then an openended time-interval is assigned to this event. The starting point is unknown; the end-point is either the most recently assigned date or the time-point of the article. If the current event-clause contains a verb in future tense (one of the verbs ‘shall’, ‘will’, ‘should’, ‘would’, ‘might’ is present in the clause) then the open-ended time-interval assigned to this event-clause has the starting point at either the most recently assigned date or the date of the article. Other tenses that can be identified with the help of CONTEX are Present and Past Indefinite. In the analyzed data all the verbs in Present Indefinite are given the most recently assigned date (or the date of the article). The situation with Past Indefinite is much more complicated and requires further investigation of more data. News stories usually describe the events that already took place at some time in the past, which is why even if the day when the event happened is not over, past tense is very often used for the description (this is especially noticeable for US news of European, Asian, African and Australian events). This means that very often an event-clause containing a verb in Past Indefinite Tense can be assigned the most recently assigned date (or the date of the article). It might prove useful to use machine learned rules for such cases. If there is no verb in the event-clause then the most recently assigned date (or the date of the article) is assigned to the event-clause. We ran the time-stamper program on two types of data: list of event-clauses extracted by the event identifier and list of event-clauses created manually. Tables 2 and 3 show the results. In the former case we analyzed only the correctly identified clauses. One can see that even on manually created data the performance of the time-stamper is not 100%. Why? Some errors are caused by assigning the time based on the date-phrase present in the eventclause, when this date-phrase is not an adverbial time modifier but an attribute. For example, The third event describes the May 30 earthquake but the time interval given for this event is {1998:32:0}---{1998:60:0} (i.e., the event happened in February). It might be possible to use machine learned rules to correct such cases. One more significant source of errors is the writing style: When the reader sees early this morning he or she tends to assign to this clause the time of the article, but later as seeing looked for two days, realizes that the time of the clause containing early this morning is two days earlier than the time of the article. It seems that the errors caused by the writing style can hardly be avoided. If an event happened at some time-point but according to the information in the sentence we can assign only a time-interval to this event (for example, February Earthquake) then we say that the time-interval is assigned correctly if the necessary time-point is within this time-interval
5 Time-line for Several News Stories and its Applications. After stamping all the news stories from the analyzed set, we arrange the event-clauses from all the articles into a chronological order. After doing that we obtain a new set of event-clauses which can easily be divided into two subsets–the first one containing all the references to the February earthquake, the second one containing the list of event-clauses in chronological order, describing what happened in May. Such a text where all the events are organized in a chronological order might be very helpful in multidocument summarization, where it is important to include into the final summary not only the most important information but also the most recent one. The output of the presented system gives the information about the timeorder of the events described in several documents.
6 Related work. Several linguistic and psycholinguistic studies deal with the problem of time-arrangement of different texts. The research presented in these studies highlights many problems but does not solve them. As for computational applications of time theories, most work was done on temporal expressions that appear in scheduling dialogues (Busemann et al., 1997; Alexandresson et al., 1997). There are many constraints on temporal expressions in this domain. The most relevant prior work is (Mani and Wilson, 2000), who implemented their system on news stories, introduced rules spreading time-stamps obtained with the help of explicit temporal expressions throughout the whole article, and invented machine learning rules for disambiguating between specific and generic use of temporal expressions (for example, whether Christmas is used to denote the 25th of December or to denote some period of time around the 25th of December). They also mention a problem of disambiguating between temporal expression and proper name, as in ‘USA Today’.
7 Conclusion. Bell (1997) notices “more research is needed on the effects of time structure on news comprehension. The hypothesis that the noncanonical news format does adversely affect understanding is a reasonable one on the basis of comprehension research into other narrative genres, but the degree to which familiarity with news models may mitigate these problems is unclear”. This research can greatly improve the performance of time-stamper and might lead to a list of machine learning rules for time detection. In this paper we made an attempt to not just analyze and decode temporal expressions but to apply this analysis throughout the whole text and assign time-stamps to such type of clauses, which later could be used as separate sentences in various natural language applications, for example in multidocument summarization. text number of manually number of time point percentage of number created event-clauses correctly assigned to correct manually created clauses assignment target 1 7 6 85.71 target 2 27 20 74.07 target 3 5 4 80.00 target 4 28 26 92.85 target 5 33 30 90.91 target 6 58 37 63.79 Total 158 123 77.85