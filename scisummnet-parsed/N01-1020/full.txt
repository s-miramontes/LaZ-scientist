. within an edit-distance of 3) from the remaining word-pairs as training data. Train on those pairs. For this set of experiments, Portuguese was chosen as the target language and Spanish, French, Italian and Romanian the source languages (Figure 2). The Spanish-Portuguese dictionary contained 1000 word pairs, while the others contained 900 pairs. 10(9)fold cross-validation experiments were performed in each case. The number of training pairs for the adaptive methods which remained after filtering out unlikely cognate pairs ranged from 621 (for Spanish) to 232 (for Romanian). For the purpose of evaluation, we constrained the candidate test set to have exactly one translation per source word. However, this property was not used to improve candidate alignment (e.g. via the pigeonhole principle). Table 1 shows results for different candidate distance functions for Spanish-Portuguese and FrenchPortuguese translation induction. The metrics depicted in the first three lines, namely Levenshtein distance (L), the HMM fenonic model (H), and the stochastic transducer (S), were previously described in Section 2. The other three methods are variants of Levenshtein distance where the costs for edit operations have been modified. In L-V, the substitution operations between vowels are changed from 1 to 0.5. Two adaptively trained variants, L-S and L-A, are shown in the last two lines of Table 1. The weights in these two systems were produced by filtering the probabilities obtained from the stochastic transducer into three weight classes: 0.5, 0.75, and 1. Identity substitutions were assigned a cost of zero. For L-S, the cost matrix was separately trained for each language pair, and for L-A, it was trained collectively over all the Romance languages. Table 2 shows some of the highest probability consonant-to-consonant edit operations computed by the stochastic transducer (S). Most of these topranking derived transformations have been observed to be relatively low distance by either linguistic analysis of historical sound changes or by phonological classification, notably: nasal sonorants (&quot;n&quot; , unvoiced stops (&quot;p&quot;, &quot;f&quot;), and voiced stops (&quot;c&quot;, &quot;g&quot;, &quot;t&quot;, &quot;d&quot;). Other pairs are derivationally reasonable: (&quot;b&quot; , &quot;v&quot;), (&quot;x&quot; , &quot;s&quot;) and (&quot;s&quot; , &quot;c&quot;); while some may be noise: (&quot;g&quot;, &quot;n&quot;) and (&quot;g&quot;, &quot;v&quot;). Not shown are vowel-to-vowel substitutions which in general were the most highly ranked; also not shown are tight correspondences between accented and unaccented vowel variants which were also learned by the stochastic transducer. As can be observed from Table 1, pure Levenshtein distance (L) works surprisingly well. Dynamic adaptation via the stochastic transducers (S) also gives a notable boost on French-Portuguese (increasing cognate accuracy from 66% to 79%) but offer little improvement for Spanish-Portuguese (perhaps because pure Levenshtein needs no diffusion for relatively close languages while more complex mappings benefit from training). Similarly, a slight improvment is observed for Romanian-Portuguese under S, but no improvement for Italian-Portuguese. Also, empirical evidence suggests that the best method is achieved through learning weights with stochastic transducers and then using these weights in the L-S framework. for each word o E 0 for each bridge language B Translate o b E B Vt E T, Calculate D(b,t) Rank t by D(b,t) Score t using information from all bridges Select highest scored t Produce mapping o t Two scoring methods were investigated for the above algorithm: one based on rank and the other on distance. The rank-based scoring method takes each proposed target and combines the rank of that proposal across all classifiers, and chooses the translation with the lowest resulting rank (rank 1 is the best proposed translation). Since including all the hypothesized translations regardless of ranking performed poorly, we only include the ones with a ranking lower than some threshold N. The distance-based scoring method selects the hypothesized target word with the smallest distance from a translation in any of the bridge languages. We also tested one alternative dist-rank which uses ranks (as described above) to break ties in the distance-based method, with similar performance. In Table 6, we present the results obtained by applying different combination algorithms for the pathway from English to Portuguese using one of the other Romance languages (Spanish, Italian, French, and Romanian) as bridges and compare with the single best path (English-Spanish-Portuguese). These results are presented for unrestricted matching on the full dictionary lexicon (1097 words in each language)2. This is a more difficult task than that used for direct induction (selecting between 100 and 900 potential translation candidates for each sourcelanguage word), so the system's performance is lower than the Section 3 results. Since all available dictionaries are incomplete, it is difficult to decide which set of English words to compare against. Table 6 presents results for different choices of word coverage: the subset of existing pairs for English-Spanish, the union over all languages, and the intersection of all languages. Trends across subsets are relatively consistent. As an illustration, Table 7 shows consensus formation on English-Norweigian and English-Portuguese translation mappings via multiple bridge languages. Note that the English-French dictionary used here has no entry for &quot;bait&quot;, preventing its use as a bridge language for this word. As can be seen in Table 6, the distance-based combination methods are more successful at combining the different proposals than the rank-N combinations. One possible explanation for this is that rankbased classifiers pick the candidate with the best allaround distance, while distance-based combinations choose the single best candidate. Choosing the best all-around performer is detrimental when cognates exist for some languages but not for others. The performance of an oracle, if allowed to choose the correct translation if it appears within the top-N in any language, would provide an upper bound for the performance of the combination methods. Results for such oracles are also reported in Table 6. The methods corresponding to &quot;oracle-1&quot; and &quot;distance&quot; are choosing from the same set of proposed targets, and the &quot;distance&quot; method achieves performance close to that of the oracle (77 vs. 82.8).
6 Path Differences. This section investigates the effect of different pathway configurations on the performance of the final multi-path system by examining the following situations: The results of these experiments are shown in Table 8.3 3Key: en=English, pt=Portuguese, fr=French, it=Italian, es=Spanish, ro=Romanian, du=Dutch, no=Norwegian, de=German, da=Danish, cz=Czech, uk=Ukrainian, po=Polish, sr=Serbian, ru=Russian The data sets used in these experiments were approximately the same size as those used in the previous experiment 1100-1300 translation word pairs. Dictionaries for Russian and Ukrainian were converted into romanized pronunciation dictionaries. There are three observations which can be made from the multipath results. In Table 8 &quot;Cvg&quot; or cognate coverage is the percentage words in the source language for which any of the bridge languages contains a cognate to the target translation. Italian and French bridges, for example, offer additional translation pathways to Portuguese which augment the Spanish pathways. Using all languages together improves coverage, although this often does not improve performance over using the best single bridge language. As a final note, Table 9 shows the cross-language translation rates for some of the investigated languages. When translating from English to one of the Romance languages, using Spanish as the bridge language achieves the highest accuracy; and using Russian as the bridge language achieves the best performance when translating from English to the Slavic languages. However, note that using English alone without a bridge language when translating to the Romance languages still achieves reasonable performance, due to the substantial French and Latinate presence in English vocabulary.
7 Related Work. Probabilistic string edit distance learning techniques have been studied by Ristad and Yianilos (1998) for use in pronunciation modeling for speech recognition. Satta and Henderson (1997) propose a transformation learning method for generic string transduction. Brill and Moore (2000) propose an alternative string distance metric and learning algorithm. While early statistical machine translation models, such as Brown et al. (1993), did not use any cognate based information to seed their wordto-word translation probabilities, subsequent models (Chen, 1993 and Simard et al., 1992) incorporated some simple deterministic heuristics to increase the translation model probabilities for cognates. Other methods have been demonstrated for building bilingual dictionaries using simple heuristic rules includes Kirschner (1982) for English/Czech dictionaries and Chen (1998) for Chinese/English proper names. Tiedemann (1999) improves on these alignment seedings by learning all-or-nothing rules for detecting Swedish/English cognates. Hajie et al. (2000) has studied the exploitation of language similarity for use in machine translation in the case of the very closely related languages (Czech/Slovak). Covington (1998) uses an algorithm based on heuristic orthographic changes to find cognate words for purposes of historical comparison. Perhaps the most comprehensive study of word alignment via string transduction methods was pioneered by Knight and Graehl (1998). While restricted to single language transliteration, it very effectively used intermediary phonological models to bridge direct lexical borrowing across distant languages.
8 Conclusion. The experiments reported in this paper extend prior research in a number of directions. The novel probabilistic paradigm for inducing translation lexicons for words from unaligned word lists is introduced. The set of languages on which we demonstrate these methods is broader than previously examined. Finally, the use of multiple bridge languages and of the high degree of intra-family language similarity for dictionary induction is new. There are a number of open questions. The first is whether there exists a better string transformation algorithm to use in the induction step. One possible area of investigation is to use larger dictionaries and assess how much better stochastic transducers, and distance metrics derived from them, perform with more training data. Another option is to investigate the use of multi-vowel or multi-consonant compounds which better reflect the underlying phonetic units, using an more sophisticated edit distance measure. In this paper, we explore ways of using cognate pairs to create translation lexicons. It is an interesting research question as to whether we can augment these methods with translation probabilities estimated from statistical frequency information gleaned from loosely aligned or unaligned bilingual corpora for non-cognate pairs. Various machine learning techniques, including co-training and mutual bootstrapping, could employ these additional measures in creating better estimates. The techniques presented here are useful for language pairs where an on-line translation lexicon does not already exist, including the large majority of the world's lower-density languages. For language pairs with existing translation lexicons, these methods can help improve coverage, especially for technical vocabulary and other more recent borrowings which are often cognate but frequently missing from existing dictionaries. In both cases, the great potential of this work is the ability to leverage a single bilingual dictionary into translation lexicons for its entire language family, without any additional resources beyond raw wordlists for the other languages in the family.
9 Acknowledgements. The authors would like to thank the following people for their insightful comments and feedback on drafts of this work: Radu Florian, Jan Hajie, Ellen Riloff, Charles Schafer, and Richard Wicentowski. Thanks also to the Johns Hopkins NLP lab in general for the productive and stimulating environment.