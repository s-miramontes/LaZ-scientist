apos;How do you say octopus in Japanese?' (a) EL *AT, X,FP tEl 'EV Plausible Segmentation ri4-wen2 zhangl-yu2 zen3-me0 shuol 'Japanese' octopus' 'how' 'say' Implausible Segmentation ri4 wen2-zhangl yu2 zen3-me0 shuol 'Japan' essay' 'fish' how' 'say' Figure 1 A Chinese sentence in (a) illustrating the lack of word boundaries. In (b) is a plausible segmentation for this sentence; in (c) is an implausible segmentation. orthographic words are thus only a starting point for further analysis and can only be regarded as a useful hint at the desired division of the sentence into words. Whether a language even has orthographic words is largely dependent on the writing system used to represent the language (rather than the language itself); the &quot;orthographic is not universal. Most that use Roman, Armenian, or Semitic scripts, and many use scripts, mark orthographic word boundaries; however, languages written in a Chinese-derived writing system, including Chinese and Japanese, as well as Indian-derived writing systems languages like Thai, do not delimit orthographic Put another way, written Chinese simply lacks orthographic words. In Chinese text, individual characters of the script, to which we shall refer by their traditional of are written one after another with no intervening spaces; a Chinese is shown in Figure Partly as a result of this, the notion &quot;word&quot; has never played a role in Chinese philological tradition, and the idea that Chinese lacks anything analogous to words in European languages has been prevalent among Western sinologists; see DeFrancis (1984). Twentieth-century linguistic work on Chinese (Chao 1968; Li and Thompson 1981; Tang 1988,1989, inter alia) has revealed the incorrectness of this traditional view. All notions of word, with the exception of the orthographic word, are as relevant in Chinese as they are in English, and just as is the case in other a word in Chinese may correspond to one or more symbols in the orthog- 1 For a related approach to the problem of word-segmention in Japanese, see Nagata (1994), inter alia. Chinese AV&quot;character'; this is the same word as Japanese 3 Throughout this paper we shall give Chinese examples in traditional orthography, followed by a Romanization into the scheme; numerals following each pinyin syllable represent tones. Examples will usually be accompanied by a translation, plus a morpheme-by-morpheme gloss given in parentheses whenever the translation does not adequately serve this purpose. In the pinyin transliterations a dash (-) separates syllables that may be considered part of the same phonological word; spaces are used to separate plausible phonological words; and a plus sign (4-) is used, where relevant, to indicate morpheme boundaries of interest. 378 Sproat, Shih, Gale and Chang Word-Segmentation for Chinese is a fairly uncontroversial case of a monographemic word, 1131S country) 'China' a fairly uncontroversial case of a digraphemic word. The relevance of the distinction between, say, phonological words say, dictionary words is shown by an example like *1:1 131 zhonglren2-min2 gong4-he2-guo2 people republic) 'People's Republic of China.' Arguably this consists of about three phonological words. On the other hand, in a translation system one probably wants to treat this string as a single dictionary word since it has a conventional and somewhat unpredictable translation into English. if one wants to any purposeâ€”from Chinese sentences, one faces a more difficult task than one does in English since one cannot use spacing as a guide. For example, suppose one is building a TTS system for Mandarin Chinese. For that application, at a minimum, one would want to know the phonological word boundaries. Now, for this application one might be tempted to simply bypass the segmentation problem and pronounce the text character-by-character. However, there are several reasons why this approach will not in general work: 1. Many hanzi have more than one pronunciation, where the correct depends upon word affiliation: Erg is pronounced is a prenominal modification marker, but the word is normally but a person's given name. 2. Some phonological rules depend upon correct word segmentation, including Third Tone Sandhi (Shih 1986), which changes a 3 (low) tone a 2 (rising) tone before another 3 tone: flao3 shu3.1 becomes [ ], than [ 1, the first applies within the word blocking its phrasal application. 3. In various dialects of Mandarin certain phonetic rules apply at the word level. For example, in Northern dialects (such as Beijing), a full tone (1, 2, 3, or 4) is changed to a neutral tone (0) in the final syllable of many melon' is often pronounced The high 1 tone of would not normally neutralize in this fashion if it were functioning as a word on its own. 4. TTS systems in general need to do more than simply compute the pronunciations of individual words; they also need to compute intonational phrase boundaries in long utterances and assign relative prominence to words in those utterances. It has been shown for English (Wang and Hirschberg 1992; Hirschberg 1993; Sproat 1994, inter alia) that grammatical part of speech provides useful information for these tasks. Given that part-of-speech labels are properties of words rather than morphemes, it follows that one cannot do part-of-speech assignment without having access to word-boundary information. Making the reasonable assumption that similar information is relevant for solving these problems in Chinese, it follows that a prerequisite for intonation-boundary assignment and prominence assignment is word segmentation. The points enumerated above are particularly related to TTS, but analogous arguments can easily be given for other applications; see for example Wu and Tseng's (1993) discussion of the role of segmentation in information retrieval. There are thus some very good reasons why segmentation into words is an important task. 379 Computational Linguistics Volume 22, Number 3 A minimal requirement for building a Chinese word segmenter is obviously a dictionary; furthermore, as has been argued persuasively by Fung and Wu (1994), one will perform much better at segmenting text by using a dictionary constructed with text of the same genre as the text to be segmented. For novel texts, no lexicon that consists simply of a list of word entries will ever be entirely satisfactory, since the list will inevitably omit many constructions that should be considered words. Among these are words derived by various productive processes, including: Morphologically derived words such (student+plural) 'students,' which is derived by the affixation of the affix the noun Personal names such as KUM Enlai.' Of course, we can expect famous names like Zhou Enlai's to be in many dictionaries, names such as EA* name of the second author of this paper, will not be found in any dictionary. Transliterated foreign names such as 'Malaysia.' Again, famous place names will most likely be found in the but less well-known names, such as (as in the New Jersey town name 'New Brunswick') will not generally be found. In this paper we present a stochastic finite-state model for segmenting Chinese text into words, both words found in a (static) lexicon as well as words derived via the above-mentioned productive processes. The segmenter handles the grouping of hanzi into words and outputs word pronunciations, with default pronunciations for hanzi it cannot group; we focus here primarily on the system's ability to segment text appropriately (rather than on its pronunciation abilities). The model incorporates various recent techniques for incorporating and manipulating linguistic knowledge using finite-state transducers. It also incorporates the Good-Turing method (Baayen 1989; Church and Gale 1991) in estimating the likelihoods of previously unseen constructions, including morphological derivatives and personal names. We will evaluate of the segmentation, as well as the performance. This latter evaluation compares the performance of the system with that of several human judges since, as we shall show, even people do not agree on a single correct way to segment a text. Finally, this effort is part of a much larger program that we are undertaking to develop stochastic finite-state methods for text analysis with applications to TTS and other areas; in the final section of this paper we will briefly discuss this larger program so as to situate the work discussed here in a broader context.